<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="32" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="76" started-at="2019-06-10T18:07:17Z" finished-at="2019-06-10T18:07:17Z">
    <groups>
      <group name="doubleChar">
        <method signature="StringTwoCountCodeTest.testCountCode3()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode3" class="StringTwoCountCodeTest"/>
        <method signature="StringTwoCountCodeTest.testDoubleCharExpectedToFail()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testDoubleCharExpectedToFail" class="StringTwoCountCodeTest"/>
        <method signature="StringTwoMethodsDoubleCharTest.testDoubleChar()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testDoubleChar" class="StringTwoMethodsDoubleCharTest"/>
      </group> <!-- doubleChar -->
      <group name="doubleChar2">
        <method signature="StringTwoMethodsDoubleCharTest.testDoubleCharExpectedToFail()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testDoubleCharExpectedToFail" class="StringTwoMethodsDoubleCharTest"/>
      </group> <!-- doubleChar2 -->
      <group name="testCountCode">
        <method signature="StringTwoCountCodeTest.testCountCode()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode" class="StringTwoCountCodeTest"/>
        <method signature="StringTwoCountCodeTest.testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" class="StringTwoCountCodeTest"/>
        <method signature="StringTwoCountCodeTest.testCountCode4()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode4" class="StringTwoCountCodeTest"/>
      </group> <!-- testCountCode -->
    </groups>
    <test name="Command line test" duration-ms="76" started-at="2019-06-10T18:07:17Z" finished-at="2019-06-10T18:07:17Z">
      <class name="StringTwoCountCodeTest">
        <test-method status="PASS" signature="startRequiredClass()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="startRequiredClass" is-config="true" duration-ms="10" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRequiredClass -->
        <test-method status="PASS" signature="startRequiredClass()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="startRequiredClass" is-config="true" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRequiredClass -->
        <test-method status="PASS" signature="testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode2 -->
        <test-method status="PASS" signature="testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode2 -->
        <test-method status="PASS" signature="testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode2 -->
        <test-method status="PASS" signature="testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode2 -->
        <test-method status="PASS" signature="testCountCode2()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode2 -->
        <test-method status="PASS" signature="testCountCode3()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode3" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode3 -->
        <test-method status="PASS" signature="testDoubleCharExpectedToFail()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testDoubleCharExpectedToFail" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleCharExpectedToFail -->
        <test-method status="PASS" signature="testCountCode()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode -->
        <test-method status="PASS" signature="testCountCode4()[pri:0, instance:StringTwoCountCodeTest@7c75222b]" name="testCountCode4" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountCode4 -->
      </class> <!-- StringTwoCountCodeTest -->
      <class name="StringTwoMethodsDoubleCharTest">
        <test-method status="PASS" signature="testConCat()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testConCat" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConCat -->
        <test-method status="PASS" signature="testConCat3()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testConCat3" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConCat3 -->
        <test-method status="PASS" signature="testConCat4()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testConCat4" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConCat4 -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, java.lang.String)[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="doubleCharDataProvider" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[step]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sstteepp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testConCat2()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testConCat2" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConCat2 -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, java.lang.String)[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="doubleCharDataProvider" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hhii]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, java.lang.String)[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="doubleCharDataProvider" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[the]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tthhee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testDoubleCharExpectedToFail()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testDoubleCharExpectedToFail" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleCharExpectedToFail -->
        <test-method status="PASS" signature="testDoubleChar()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testDoubleChar" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoubleChar -->
        <test-method status="PASS" signature="AfterRequiredClass()[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="AfterRequiredClass" is-config="true" duration-ms="5" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterRequiredClass -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, java.lang.String)[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="doubleCharDataProvider" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[he]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hhee]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, java.lang.String)[pri:0, instance:StringTwoMethodsDoubleCharTest@36d64342]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="doubleCharDataProvider" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hii]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hhiiii]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
      </class> <!-- StringTwoMethodsDoubleCharTest -->
      <class name="StringTwoMethodsContHiTest">
        <test-method status="PASS" signature="testCountHi()[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHi" duration-ms="5" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHi -->
        <test-method status="PASS" signature="testCountHiFourNegative()[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiFourNegative" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiFourNegative -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="5" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AHIBhiChi hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="FAIL" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at StringTwoMethodsContHiTest.testCountHiPositive(StringTwoMethodsContHiTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahi hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hiahi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hihi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="1" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hihihi hihihi hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="FAIL" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ hihihi hihihi hi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at StringTwoMethodsContHiTest.testCountHiPositive(StringTwoMethodsContHiTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiPositive(java.lang.String, int)[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiPositive" duration-ms="1" started-at="2019-06-10T21:07:17Z" data-provider="CountHi" finished-at="2019-06-10T21:07:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahi hihihihhi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiPositive -->
        <test-method status="PASS" signature="testCountHiTwoPositive()[pri:0, instance:StringTwoMethodsContHiTest@39ba5a14]" name="testCountHiTwoPositive" duration-ms="0" started-at="2019-06-10T21:07:17Z" finished-at="2019-06-10T21:07:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountHiTwoPositive -->
      </class> <!-- StringTwoMethodsContHiTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
